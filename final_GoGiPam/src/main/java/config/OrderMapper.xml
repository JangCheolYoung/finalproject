<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="order">
	<select id="orderList" parameterType="String" resultType="dto.OrderDTO">
		select * from orders where member_id = #{member_id}
	</select>
	
	<insert id="orderInsert" parameterType="dto.OrderDTO">
		<selectKey order="BEFORE" keyProperty="order_num" resultType="long">
        	select #{order_num} || to_number(to_char(sysdate,'YYMMDD') || nvl(to_char(max(substr(order_num,11))),'0000'))+1
        	from orders
         	where to_char(order_date,'YYYYMMDD') = to_char(sysdate,'YYYYMMDD')
   		</selectKey>	
		
		merge into orders od using (select * from cart where member_id = #{member_id}) ca
   		on(ca.member_id != #{member_id})

		when not matched then
    	insert (od.order_num, od.item_key, od.order_amount, od.total_price, od.option_key, od.member_id, od.order_method, od.order_status, od.order_date, od.order_fullprice, od.order_usemileage, od.order_plusmileage, od.address, od.address_detail, od.receiver_name, od.receiver_tel) 
    	values (#{order_num}, ca.item_key, ca.cart_amount, (ca.cart_amount * ca.cart_price), ca.option_key, #{member_id}, #{order_method}, #{order_status}, sysdate, #{order_fullprice}, #{order_usemileage}, #{order_plusmileage}, #{address}, #{address_detail}, #{receiver_name}, #{receiver_tel})				
	</insert>
	
	<update id="orderStatusUpdate" parameterType="String">
		update orders set order_status = #{order_status} where member_id = #{member_id} and order_num = #{order_num}
	</update>
	
	<delete id="orderDelete" parameterType="dto.OrderDTO">
		delete from orders where member_id = #{member_id} and order_num = #{order_num} 
	</delete>
</mapper>